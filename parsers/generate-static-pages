#!/usr/bin/env python

# Gets the data from the source URL, and parses it into lots of useful JSON.

import json
import dateutil.parser
import xml.etree.ElementTree as etree
import os

from datetime import datetime
from slugify import slugify
from string import Template

# The URL we're going to get the data from
SOURCE_URL = 'http://data.parliament.uk/membersdataplatform/services/mnis/members/query/House=Commons%7CIsEligible=true/Committees|BiographyEntries/'

# Where we store a copy of the file locally
SOURCE_FILE_DESTINATION = '../_source/members.xml'

# The folders to put the resulting data files in
MEMBER_DATA_FOLDER = '../data/members'
INTERESTS_DATA_FOLDER = '../data/interests'

MEMBER_PAGE_FOLDER = '../members'
MEMBER_MORE_FOLDER = '../_includes/members'

INTERESTS_PAGE_FOLDER = '../interests'
INTERESTS_MORE_FOLDER = '../_includes/interests'

try:
    MEMBERS_XML = etree.parse(SOURCE_FILE_DESTINATION)
except:
    print 'Oh no! Data from "' + SOURCE_FILE_DESTINATION + '" cannot be parsed!'
    exit(1)

MEMBERS = MEMBERS_XML.getroot()

print '"' + SOURCE_FILE_DESTINATION + '" has ' + str(len(MEMBERS)) + ' members.'

def parse_gender(gender):
    return {
        'M': 'male',
        'F': 'female',
    }.get(gender, 'unknown')

def get_colour(party):
    return {
        'Conservative': '#333399',
        'Labour': '#cc0000',
        'Labour (Co-op)': '#cc0000',
        'Liberal Democrat': '#f1cc0a',
        'Green': '#99cc33'
    }.get(party, '#999999')

TEMPLATE_MEMBER_FILE = open('../_templates/member.html', 'r')
TEMPLATE_MEMBER = Template(TEMPLATE_MEMBER_FILE.read())
TEMPLATE_MEMBER_FILE.close()

TEMPLATE_INTEREST_FILE = open('../_templates/interest.md', 'r')
TEMPLATE_INTEREST = Template(TEMPLATE_INTEREST_FILE.read())
TEMPLATE_INTEREST_FILE.close()

TEMPLATE_INTERESTS_FILE = open('../_templates/interests.md', 'r')
TEMPLATE_INTERESTS = Template(TEMPLATE_INTERESTS_FILE.read())
TEMPLATE_INTERESTS_FILE.close()

MEMBER_MAP = {}
INTERESTS_MAP = {}
MEMBER_SLUG_MAP = {}
MEMBER_ALL_LIST = []

for member in MEMBERS:

    member_slug = slugify(member.find('DisplayAs').text)
    member_id = member.attrib['Member_Id']

    member_committees = []

    for committee in member.find('Committees'):
        committee_from = dateutil.parser.parse(committee.find('StartDate').text)
        committee_from_value = committee_from.strftime('%Y-%m-%d')

        if committee.find('EndDate').text:
            committee_to = dateutil.parser.parse(committee.find('EndDate').text)
            committee_to_value = committee_to.strftime('%Y-%m-%d')
        else:
            committee_to = None
            committee_to_value = None

        if committee_from < datetime.now() and ( committee_to == None or committee_to > datetime.now() ):
            member_committees.append({
                'name': committee.find('Name').text,
                'from': committee_from_value,
                'to': committee_to_value
            })

    member_interests = []

    for biography_entry in member.find('BiographyEntries'):
        if biography_entry.attrib['Category_Id'] == '1':
            interests = biography_entry.find('Entry').text.split(',')
            for interest in interests:
                interest_clean_name = interest.strip().title()
                if interest_clean_name != '':
                    member_interests.append(interest_clean_name)
                    if not interest_clean_name in INTERESTS_MAP:
                        INTERESTS_MAP[interest_clean_name] = []
                    INTERESTS_MAP[interest_clean_name].append(member_id)

    member_data = {
        'slug': member_slug,
        'id': member_id,
        'display_name': member.find('DisplayAs').text,
        'party_name': member.find('Party').text,
        'party_colour': get_colour(member.find('Party').text),
        'interests': member_interests,
        'constituency_name': member.find('MemberFrom').text
    }

    person_interests_list = ''

    for interest in member_interests:
        person_interests_list = person_interests_list + '''
<li><a href="/interests/''' + slugify(interest) + '.html">' + interest + '</a></li>'

    member_template_data = {
        'slug': member_slug,
        'display_name': member.find('DisplayAs').text,
        'party_name': member.find('Party').text,
        'party_colour': get_colour(member.find('Party').text),
        'interests_list': person_interests_list,
        'constituency_name': member.find('MemberFrom').text
    }

    MEMBER_MAP[member_id] = member_data
    MEMBER_SLUG_MAP[member_slug] = member_id
    MEMBER_ALL_LIST.append({'name': member.find('DisplayAs').text})

    # Write this member's data

    with open(MEMBER_DATA_FOLDER + '/' + member_id + '.json', 'w') as output_file:
        output_file.write(json.dumps(member_data, indent=4))

    # Make sure there's a more data file, and spit out their page file.

    if not os.path.isfile(MEMBER_MORE_FOLDER + '/' + member_slug + '.md'):
        open(MEMBER_MORE_FOLDER + '/' + member_slug + '.html', 'a').close()

    with open(MEMBER_PAGE_FOLDER + '/' + member_slug + '.html', 'w') as output_file:
        output_file.write(TEMPLATE_MEMBER.substitute(member_template_data).encode('utf8'))

# Spit out the interests file!

interests_list = ''

for interest in INTERESTS_MAP.keys():
    interests_list = interests_list + '''
* [''' + interest.encode('utf-8') + '](/interests/' + slugify(interest) + '.html)'

interests_data = {
    'interests_list': interests_list
}

with open(INTERESTS_PAGE_FOLDER + '/index.md', 'w') as output_file:
    output_file.write(TEMPLATE_INTERESTS.substitute(interests_data))

# Spit out individual interest files!

for interest, people in INTERESTS_MAP.iteritems():

    interest_slug = slugify(interest)

    interests_people_list = ''

    for person in people:
        interests_people_list = interests_people_list + '''
* [''' + MEMBER_MAP[person]['display_name'] + '](/members/' + MEMBER_MAP[person]['slug'] + '.html)'

    interest_data = {
        'slug': interest_slug,
        'name': interest.replace(':', '&#58;'),
        'interests_people': interests_people_list
    }

    if not os.path.isfile(INTERESTS_MORE_FOLDER + '/' + interest_slug + '.md'):
        open(INTERESTS_MORE_FOLDER + '/' + interest_slug + '.md', 'a').close()

    with open(INTERESTS_PAGE_FOLDER + '/' + interest_slug + '.md', 'w') as output_file:
        output_file.write(TEMPLATE_INTEREST.substitute(interest_data).encode('utf8'))

# Write out the data maps in case we need to look things up

with open(INTERESTS_DATA_FOLDER + '/map.json', 'w') as output_file:
    output_file.write(json.dumps(INTERESTS_MAP, indent=4))

with open(MEMBER_DATA_FOLDER + '/map.json', 'w') as output_file:
    output_file.write(json.dumps(MEMBER_SLUG_MAP, indent=4))

# Spit out the files for visualisation

with open(MEMBER_DATA_FOLDER + '/all.json', 'w') as output_file:
    output_file.write(json.dumps(MEMBER_ALL_LIST, indent=4))

print 'Hooray, all done!'
