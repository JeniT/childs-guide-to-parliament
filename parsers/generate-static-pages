#!/usr/bin/env python

# Gets the data from the source URL, and parses it into lots of useful JSON.

import json
import dateutil.parser
import xml.etree.ElementTree as etree
import os

from datetime import datetime
from slugify import slugify
from string import Template

# Where we store a copy of the file locally
SOURCE_FILE_DESTINATION = '../_source/members.xml'

# The folders to put the resulting data files in
MEMBER_DATA_FOLDER = '../data/members'
INTERESTS_DATA_FOLDER = '../data/interests'

MEMBER_PAGE_FOLDER = '../members'
MEMBER_MORE_FOLDER = '../_includes/members'

INTERESTS_PAGE_FOLDER = '../interests'
INTERESTS_MORE_FOLDER = '../_includes/interests'

try:
    MEMBERS_XML = etree.parse(SOURCE_FILE_DESTINATION)
except:
    print 'Oh no! Data from "' + SOURCE_FILE_DESTINATION + '" cannot be parsed!'
    exit(1)

MEMBERS = MEMBERS_XML.getroot()

print '"' + SOURCE_FILE_DESTINATION + '" has ' + str(len(MEMBERS)) + ' members.'

def parse_gender(gender):
    return {
        'M': 'male',
        'F': 'female',
    }.get(gender, 'unknown')

def gender_article(gender):
    return {
        'M': 'he is',
        'F': 'she is',
    }.get(gender, 'they are')

TEMPLATE_COMMONS_FILE = open('../_templates/member-commons.html', 'r')
TEMPLATE_COMMONS = Template(TEMPLATE_COMMONS_FILE.read())
TEMPLATE_COMMONS_FILE.close()

TEMPLATE_LORDS_FILE = open('../_templates/member-lords.html', 'r')
TEMPLATE_LORDS = Template(TEMPLATE_LORDS_FILE.read())
TEMPLATE_LORDS_FILE.close()

def member_template(house):
    return {
        'commons': TEMPLATE_COMMONS,
        'lords': TEMPLATE_LORDS,
    }[house]

TEMPLATE_INTEREST_FILE = open('../_templates/interest.md', 'r')
TEMPLATE_INTEREST = Template(TEMPLATE_INTEREST_FILE.read())
TEMPLATE_INTEREST_FILE.close()

TEMPLATE_INTERESTS_FILE = open('../_templates/interests.md', 'r')
TEMPLATE_INTERESTS = Template(TEMPLATE_INTERESTS_FILE.read())
TEMPLATE_INTERESTS_FILE.close()

INTERESTS_MAP = {}
MEMBER_ALL_LIST = {}

for member in MEMBERS:

    member_display_name = member.find('DisplayAs').text
    member_slug = slugify(member_display_name)
    member_id = member.attrib['Member_Id']

    member_committees = []

    for committee in member.find('Committees'):
        committee_from = dateutil.parser.parse(committee.find('StartDate').text)
        committee_from_value = committee_from.strftime('%Y-%m-%d')

        if committee.find('EndDate').text:
            committee_to = dateutil.parser.parse(committee.find('EndDate').text)
            committee_to_value = committee_to.strftime('%Y-%m-%d')
        else:
            committee_to = None
            committee_to_value = None

        if committee_from < datetime.now() and ( committee_to == None or committee_to > datetime.now() ):
            member_committees.append({
                'name': committee.find('Name').text,
                'from': committee_from_value,
                'to': committee_to_value
            })

    member_interests = []

    for biography_entry in member.find('BiographyEntries'):
        if biography_entry.attrib['Category_Id'] == '1':
            interests = biography_entry.find('Entry').text.split(',')
            for interest in interests:
                interest_clean_name = interest.strip().title()
                if interest_clean_name != '':
                    member_interests.append(interest_clean_name)
                    if not interest_clean_name in INTERESTS_MAP:
                        INTERESTS_MAP[interest_clean_name] = []
                    INTERESTS_MAP[interest_clean_name].append(member_id)

    if len(member_interests) > 0:
        member_interests_list = ''
        for interest in member_interests:
            member_interests_list = member_interests_list + '''
<li><a href="../interests/''' + slugify(interest) + '.html">' + interest + '</a></li>'
    else:
        member_interests_list = '<p>' + member_display_name + ' hasn\'t said ' + gender_article(member.find('Gender').text) + ' interested in anything! Why not <a href="http://www.writetothem.com">write to them</a> and ask?</p>'

    member_data = {
        'slug': member_slug,
        'id': member_id,
        'gender': parse_gender(member.find('Gender').text),
        'display_name': member_display_name,
        'party_name': member.find('Party').text,
        'party_slug': slugify(member.find('Party').text),
        'interests': member_interests,
        'interests_list': member_interests_list,
        'constituency_name': member.find('MemberFrom').text,
        'constituency_slug': slugify(member.find('MemberFrom').text),
        'house_name': member.find('House').text,
        'house_slug': slugify(member.find('House').text)
    }

    MEMBER_ALL_LIST[member_id] = member_data

    # Make sure there's a more data file, and spit out their page file.

    if not os.path.isfile(MEMBER_MORE_FOLDER + '/' + member_slug + '.md'):
        open(MEMBER_MORE_FOLDER + '/' + member_slug + '.html', 'a').close()

    with open(MEMBER_PAGE_FOLDER + '/' + member_slug + '.html', 'w') as output_file:
        output_file.write(member_template(slugify(member.find('House').text)).substitute(member_data).encode('utf8'))

# Spit out the interests file!

INTERESTS_LIST = ''

for interest in INTERESTS_MAP.keys():
    INTERESTS_LIST = INTERESTS_LIST + '''
* [''' + interest.encode('utf-8') + '](' + slugify(interest) + '.html)'

INTERESTS_DATA = {
    'interests_list': INTERESTS_LIST
}

with open(INTERESTS_PAGE_FOLDER + '/index.md', 'w') as output_file:
    output_file.write(TEMPLATE_INTERESTS.substitute(INTERESTS_DATA))

# Spit out individual interest files!

for interest, people in INTERESTS_MAP.iteritems():

    interest_slug = slugify(interest)

    interests_people_list = ''

    for person in people:
        interests_people_list = interests_people_list + '''
* [''' + MEMBER_ALL_LIST[person]['display_name'] + '](members/' + MEMBER_ALL_LIST[person]['slug'] + '.html)'

    interest_data = {
        'slug': interest_slug,
        'name': interest.replace(':', '&#58;'),
        'interests_people': interests_people_list
    }

    if not os.path.isfile(INTERESTS_MORE_FOLDER + '/' + interest_slug + '.md'):
        open(INTERESTS_MORE_FOLDER + '/' + interest_slug + '.md', 'a').close()

    with open(INTERESTS_PAGE_FOLDER + '/' + interest_slug + '.md', 'w') as output_file:
        output_file.write(TEMPLATE_INTEREST.substitute(interest_data).encode('utf8'))

# Spit out the interests map

with open(INTERESTS_DATA_FOLDER + '/map.json', 'w') as output_file:
    output_file.write(json.dumps(INTERESTS_MAP, indent=4))

# Spit out the all members file

with open(MEMBER_DATA_FOLDER + '/all.json', 'w') as output_file:
    output_file.write(json.dumps(MEMBER_ALL_LIST, indent=4))

print 'Hooray, all done!'
